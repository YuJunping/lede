#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2019 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
# 

name: OpenWrt-CI

on:
  schedule:
    - cron: 0 0 * * 5
  push:
    branches: 
      - master

jobs:
  build_openwrt:
    name: Build OpenWrt and release
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

          df -h

      - name: Update feeds
        run: |
          sed -i 's/\"#src-git\"/\"src-git\"/g' ./feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate configuration file
        run: |
          rm -f ./.config*
          touch ./.config
          # X86_64 固件配置
          cat >> .config <<EOF
          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_x86_64_Generic=y
          CONFIG_ARIA2_BITTORRENT=y
          CONFIG_ARIA2_NOXML=y
          CONFIG_ARIA2_OPENSSL=y
          CONFIG_ARIA2_WEBSOCKET=y
          CONFIG_OCSERV_HTTP_PARSER=y
          CONFIG_OCSERV_PROTOBUF=y
          # CONFIG_PACKAGE_amule is not set
          CONFIG_PACKAGE_aria2=y
          CONFIG_PACKAGE_ariang=y
          CONFIG_PACKAGE_certtool=y
          CONFIG_PACKAGE_iptables-mod-conntrack-extra=y
          CONFIG_PACKAGE_iptables-mod-ipopt=y
          CONFIG_PACKAGE_kcptun-client=y
          CONFIG_PACKAGE_kmod-ifb=y
          CONFIG_PACKAGE_kmod-ipt-conntrack-extra=y
          CONFIG_PACKAGE_kmod-ipt-ipopt=y
          CONFIG_PACKAGE_kmod-sched-cake=y
          CONFIG_PACKAGE_kmod-sched-connmark=y
          CONFIG_PACKAGE_kmod-sched-core=y
          # CONFIG_PACKAGE_libbfd is not set
          # CONFIG_PACKAGE_libcryptopp is not set
          # CONFIG_PACKAGE_liblzo is not set
          # CONFIG_PACKAGE_libpng is not set
          # CONFIG_PACKAGE_libupnp is not set
          # CONFIG_PACKAGE_libwxbase is not set
          # CONFIG_PACKAGE_luci-app-amule is not set
          CONFIG_PACKAGE_luci-app-aria2=y
          CONFIG_PACKAGE_luci-app-netdata=y
          CONFIG_PACKAGE_luci-app-ocserv=y
          CONFIG_PACKAGE_luci-app-openvpn=y
          # CONFIG_PACKAGE_luci-app-openvpn-server is not set
          CONFIG_PACKAGE_luci-app-qos=y
          CONFIG_PACKAGE_luci-app-sqm=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Kcptun=y
          CONFIG_PACKAGE_luci-app-wrtbwmon=y
          CONFIG_PACKAGE_luci-i18n-aria2-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-netdata-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-openvpn-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-qos-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-wrtbwmon-zh-cn=y
          CONFIG_PACKAGE_netdata=y
          CONFIG_PACKAGE_ocserv=y
          # CONFIG_PACKAGE_openvpn-easy-rsa is not set
          # CONFIG_PACKAGE_openvpn-openssl is not set
          CONFIG_PACKAGE_qos-scripts=y
          CONFIG_PACKAGE_sqm-scripts=y
          CONFIG_PACKAGE_tc=y
          EOF
          
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig

      - name: Make download
        run: |
          make download -j8
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: find ./bin/targets/ -type d -name "packages" | xargs rm -rf {}

      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/

      - name: Create release
        if: github.event == 'push'
        id: create_release
        uses: actions/create-release@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false      

      - name: Upload release asset
        if: github.event == 'push'
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/targets/*/*/
